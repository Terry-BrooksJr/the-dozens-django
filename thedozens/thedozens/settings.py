# -*- coding: utf-8 -*-
"""
Django settings for thedozens project.

Generated by 'django-admin startproject' using Django 4.2.6.


"""

import os
import sys
from datetime import datetime
from pathlib import Path
from loguru import logger
import highlight_io
from highlight_io.integrations.django import DjangoIntegration
from django_bunny.storage import BunnyStorage

GLOBAL_NOW = datetime.now()

LOGGING_CONFIG = None



# `instrument_logging=True` sets up logging instrumentation.
# if you do not want to send logs or are using `loguru`, pass `instrument_logging=False`
# H = highlight_io.H(
# 	"<YOUR_PROJECT_ID>",
# 	integrations=[DjangoIntegration()],
# 	instrument_logging=False,
# 	service_name="yo-mama-api",
# 	service_version="git-sha",
# 	environment="DEVELOPMENT",
# )
# H.init("<YOUR_PROJECT_ID>", {
#   tracingOrigins: ['localhost', 'yo-momma.net'],
#   networkRecording: {
#     enabled: true,
#     recordHeadersAndBody: true,
#   },
# });



# logger.add(
# 	H.logging_handler,
# 	format="{message}",
# 	level="DEBUG",
# 	backtrace=True,
# 	serialize=True,
# )


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "logtail": {
            "class": "logtail.LogtailHandler",
            "source_token": os.getenv("LOGGING_TOKEN"),
        },
    },
    "loggers": {
        "": {
            "handlers": [
                "logtail",
            ],
            "level": "INFO",
        },
    },
}
# SECTION - Application definition
ROOT_URLCONF = "thedozens.urls"
WSGI_APPLICATION = "thedozens.wsgi.application"
BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = os.getenv("SECRET_KEY")
DEBUG = True
CORS_ALLOW_ALL_ORIGINS = True
CSRF_TRUSTED_ORIGINS = ["https://*.yo-momma.net", "https://*.b-cdn.net"]
ADMINS = [("Terry Brooks", "Terry@BrooksJr.com")]
ALLOWED_HOSTS = ["*"]
INSTALLED_APPS = [
    # Django-Installed Apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.sites",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third-Party Apps
    "kolo",
    "rest_framework",
    "django_filters",
    "corsheaders",

    "debug_toolbar",
    "graphene_django",
    "crispy_forms",
    "crispy_bootstrap5",
    "django_prometheus",
    "drf_spectacular",
    # Project Apps
    "API",
    "graphQL",
    "drf_spectacular_sidecar",
]
LANGUAGE_CODE = "en-us"
TIME_ZONE = "America/Chicago"
USE_I18N = True
USE_TZ = True
MIDDLEWARE = [
    "django_prometheus.middleware.PrometheusBeforeMiddleware",
    "django.middleware.cache.UpdateCacheMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.cache.FetchFromCacheMiddleware",
    "django_prometheus.middleware.PrometheusAfterMiddleware"

]
if DEBUG:
    MIDDLEWARE.insert(0, 'kolo.middleware.KoloMiddleware')
RECAPTCHA_PRIVATE_KEY = str(os.getenv("RECAPTCHA_PRIVATE_KEY"))
RECAPTCHA_PUBLIC_KEY = str(os.getenv("RECAPTCHA_PUBLIC_KEY"))

#!SECTION

# SECTION - Database and Caching
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
DATABASES = {
    "default": {
        "ENGINE": "django_cockroachdb",
        "NAME": os.getenv("POSTGRES_DB"),
        "USER": os.getenv("PG_DATABASE_USER"),
        "PASSWORD": os.getenv("PG_DATABASE_PASSWORD"),
        "HOST": os.getenv("PG_DATABASE_HOST"),
        "PORT": os.getenv("PG_DATABASE_PORT"),
        "OPTIONS": {"sslmode": "verify-full"},
    }
}

CACHES = {
    "default": {
        "BACKEND": "django_prometheus.cache.backends.redis.RedisCache",
        "LOCATION": os.getenv("REDIS_CACHE_URI"),

    }
}


#!SECTION

# SECTION - CDN and Static Assests 


BUNNY_USERNAME = os.environ["BUNNY_USERNAME"]
BUNNY_PASSWORD = os.environ["BUNNY_PASSWORD"]
BUNNY_REGION = os.environ["BUNNY_REGION"]
BUNNY_BASE_DIR = os.environ["BUNNY_BASE_DIR"]
STATIC_LOCATION = "staticfiles/"
STATIC_URL = "https://cdn.yo-momma.net/"
STATIC_ROOT = STATIC_URL
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)
STATICFILES_STORAGE =  "thedozens.backends.storage.StaticStorage"
BUNNY_HOSTNAME = STATIC_URL 

#! 
#  SECTION - Applicatiom Preformance Mointoring
PROMETHEUS_LATENCY_BUCKETS = (
    0.01,
    0.025,
    0.05,
    0.075,
    0.1,
    0.25,
    0.5,
    0.75,
    1.0,
    2.5,
    5.0,
    7.5,
    10.0,
    25.0,
    50.0,
    75.0,
    float("inf"),
)
PROMETHEUS_LATENCY_BUCKETS = (
    0.1,
    0.2,
    0.5,
    0.6,
    0.8,
    1.0,
    2.0,
    3.0,
    4.0,
    5.0,
    6.0,
    7.5,
    9.0,
    12.0,
    15.0,
    20.0,
    30.0,
    float("inf"),
)
PROMETHEUS_METRIC_NAMESPACE = "dozens_api"


# !SECTION


# SECTION - Password validatio and User Authentication

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
]

#!SECTION


# SECTION - Static files & Templates
template_dir = [
    os.path.join(BASE_DIR, 'thedozens', "templates"),
]
INTERNAL_IPS = [
    "127.0.0.1",
]
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": template_dir,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


#!SECTION

# SECTION - DRF Settings
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly"
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
    ],
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

#!SECTION


# SECTION - REST API.SWAGGER DOC SETTINGS 
SPECTACULAR_SETTINGS = {
    'TITLE': 'Yo\' Mama - The Roast API - Swagger UI',
    'DESCRIPTION': 'RESTful implementation of a light hearted Roast Insult API ',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': True,
        "SWAGGER_UI_SETTINGS": {
        "deepLinking": True,
        "persistAuthorization": True,
        "displayOperationId": True
        },
    'SWAGGER_UI_DIST': 'https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest',
    'SWAGGER_UI_FAVICON_HREF': "https://cdn.yo-momma.net/staticfiles/assets/yoyoo_400x400.jpg",
    'CONTACT': {
        "name": "Terry A. Brooks, Jr.",
        "url": "https://brooksjr.com",
        "email": "terry@brooksjr.com"
    },
    "EXTERNAL_DOCS": {
        "url": "https://github.com/Terry-BrooksJr/the-dozens-django",
        "description": "GitHub Repository and full API documentation Hub"
    }

    # OTHERTINGS
}

#! SECTION 
# SECTION - Email Settings (Django-Mailer)

EMAIL_BACKEND = "mailer.backend.DbBackend"    

MAILER_EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.environ["EMAIL_SERVER"]
EMAIL_USE_TLS = True
EMAIL_PORT = os.environ["EMAIL_TSL_PORT"]
EMAIL_HOST_USER = os.environ["NOTIFICATION_SENDER_EMAIL"]
EMAIL_HOST_PASSWORD = os.environ["EMAIL_ACCT_PASSWORD"]
MAILER_EMPTY_QUEUE_SLEEP = os.environ["MAILER_EMPTY_QUEUE_SLEEP"]
# !SECTION

#  SECTION - GraphQL Settings (Graphene-Django)``

GRAPHENE = {
    "SCHEMA": "graphQL.schema.schema",
    "MIDDLEWARE": [
        "graphene_django.debug.DjangoDebugMiddleware",
    ],
}

# !SECTION

# SECTION - Form Rendering Settings (Crispy Forms)
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"
# !SECTION


PRIMARY_LOG_FILE = os.path.join(BASE_DIR, "logs", "primary_ops.log")
CRITICAL_LOG_FILE = os.path.join(BASE_DIR, "logs", "fatal.log")
DEBUG_LOG_FILE = os.path.join(BASE_DIR, "logs", "utility.log")
DEFAULT_HANDLER = sys.stdout

logger.add(DEBUG_LOG_FILE, diagnose=True, catch=True, backtrace=True, level="DEBUG")
logger.add(DEFAULT_HANDLER, diagnose=True, catch=True, backtrace=True, level="DEBUG")
logger.add(PRIMARY_LOG_FILE, diagnose=False, catch=True, backtrace=False, level="INFO")
logger.add(DEFAULT_HANDLER, diagnose=False, catch=True, backtrace=False, level="DEBUG")
