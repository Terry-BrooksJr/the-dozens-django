version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    tty: true

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    networks:
      - dozens-ecosystem
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  monitoring:
    image: prom/prometheus:latest
    restart: unless-stopped
    networks:
      - dozens-ecosystem
    volumes:
      - 'primary_hhd_dozens:/prometheus/'
      - './prometheus.yaml:/etc/prometheus/prometheus.yml'

  
  redis:
    image: redis:latest
    container_name: cache_database_dozens
    restart: unless-stopped
    networks:
      - dozens-ecosystem
    working_dir: /data/cache
    command: ./redis-server /etc/redis/redis.conf
    volumes:
      - 'primary_hhd_dozens:/data/cache'
      - './redis.conf:/etc/redis/redis.conf'
    ports:
      - '3001:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5m
      timeout: 2m
      retries: 5
      start_period: 2m
      start_interval: 2m

volumes:
  primary_hhd_dozens:

networks:
  dozens-ecosystem:
    name: dozens-ecosystem